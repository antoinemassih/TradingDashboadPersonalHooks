{"ast":null,"code":"export default function fetchStockDataIEX(ticker) {\n  var price = 0;\n\n  const userAction = async () => {\n    const response = await fetch('https://sandbox.iexapis.com/stable/stock/' + ticker + '/price?token=Tsk_b7a45cc65e624a55a5688d15eac1b692');\n    const myJson = await response.json(); //extract JSON from the http response\n  };\n\n  axios.get('https://sandbox.iexapis.com/stable/stock/' + ticker + '/price?token=Tsk_b7a45cc65e624a55a5688d15eac1b692').then(response => {\n    console.log(response.data);\n    myJson = response.data;\n    var price = myJson.price;\n  }).catch(error => console.error(error));\n  let data = {\n    \"Symbol\": ticker,\n    \"price\": price,\n    \"open\": 21,\n    \"close\": 21\n  };\n  return data;\n}","map":{"version":3,"sources":["/Users/antoinemassih/WebstormProjects/reacthooktest/src/Utilities/Data/Stocks/StockDataIEX.js"],"names":["fetchStockDataIEX","ticker","price","userAction","response","fetch","myJson","json","axios","get","then","console","log","data","catch","error"],"mappings":"AAAA,eAAe,SAASA,iBAAT,CAA2BC,MAA3B,EAAkC;AAC7C,MAAIC,KAAK,GAAG,CAAZ;;AAEI,QAAMC,UAAU,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA4CJ,MAA5C,GAAmD,mDAApD,CAA5B;AACA,UAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAF2B,CAEW;AAEzC,GAJD;;AAMAC,EAAAA,KAAK,CAACC,GAAN,CAAU,8CAA4CR,MAA5C,GAAmD,mDAA7D,EAAkHS,IAAlH,CAAuHN,QAAQ,IAAI;AAE/HO,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,IAArB;AACAP,IAAAA,MAAM,GAAGF,QAAQ,CAACS,IAAlB;AACA,QAAIX,KAAK,GAAGI,MAAM,CAACJ,KAAnB;AACH,GALD,EAKGY,KALH,CAKSC,KAAK,IAAIJ,OAAO,CAACI,KAAR,CAAcA,KAAd,CALlB;AAQJ,MAAIF,IAAI,GAAG;AAAC,cAASZ,MAAV;AAAiB,aAAQC,KAAzB;AAA+B,YAAO,EAAtC;AAAyC,aAAQ;AAAjD,GAAX;AAEA,SAAOW,IAAP;AAGH","sourcesContent":["export default function fetchStockDataIEX(ticker){\n    var price = 0;\n\n        const userAction = async () => {\n            const response = await fetch('https://sandbox.iexapis.com/stable/stock/'+ticker+'/price?token=Tsk_b7a45cc65e624a55a5688d15eac1b692');\n            const myJson = await response.json(); //extract JSON from the http response\n\n        }\n\n        axios.get('https://sandbox.iexapis.com/stable/stock/'+ticker+'/price?token=Tsk_b7a45cc65e624a55a5688d15eac1b692').then(response => {\n\n            console.log(response.data);\n            myJson = response.data;\n            var price = myJson.price;\n        }).catch(error => console.error(error));\n\n\n    let data = {\"Symbol\":ticker,\"price\":price,\"open\":21,\"close\":21};\n\n    return data;\n\n\n}"]},"metadata":{},"sourceType":"module"}