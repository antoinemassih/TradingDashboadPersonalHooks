{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/antoinemassih/WebstormProjects/reacthooktest/src/Components/Dashboard/Widgets/MeterWidgetH.js\";\nimport React, { useState } from 'react';\nexport default function MeterWidgetH(props) {\n  let bars = \"<div><svg height=\\\"16\\\" width=\\\"58\\\">\";\n  let position = 0;\n  let colorValue = \"grey\";\n\n  if (props.meterValue < 5) {\n    colorValue = \"red\";\n  } else {\n    colorValue = \"green\";\n  }\n\n  for (let i = 1; i < 11; i++) {\n    switch (true) {\n      case i < props.meterValue:\n        position = 2 + (i - 1) * 6;\n        bars += '<g fill=\"none\" stroke=\"' + colorValue + '\" stroke-width=\"4\"><path d=\"M ' + position + ' 2 l 0 12\"/></g>';\n        break;\n\n      case i === props.meterValue:\n        position = 2 + (i - 1) * 6;\n        bars += '<g fill=\"none\" stroke=\"' + colorValue + '\" stroke-width=\"4\"><path d=\"M ' + position + ' 0 l 0 16\"/></g>';\n        break;\n\n      case i > props.meterValue:\n        position = 2 + (i - 1) * 6;\n        bars += '<g fill=\"none\" stroke=\"grey\" stroke-width=\"4\"><path d=\"M ' + position + ' 2 l 0 12\"/></g>';\n        break;\n\n      default:\n    }\n  }\n\n  bars += \"</svg></div>\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-TDRedHighlight text-sm font-medium\",\n          children: props.fromTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-1 pt-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: bars\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-TDGreenHighlight text-sm font-medium\",\n          children: props.toTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_c = MeterWidgetH;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeterWidgetH\");","map":{"version":3,"sources":["/Users/antoinemassih/WebstormProjects/reacthooktest/src/Components/Dashboard/Widgets/MeterWidgetH.js"],"names":["React","useState","MeterWidgetH","props","bars","position","colorValue","meterValue","i","fromTitle","__html","toTitle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAExC,MAAIC,IAAI,GAAG,uCAAX;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,UAAU,GAAG,MAAjB;;AACA,MAAGH,KAAK,CAACI,UAAN,GAAiB,CAApB,EAAsB;AAClBD,IAAAA,UAAU,GAAG,KAAb;AACH,GAFD,MAEK;AACDA,IAAAA,UAAU,GAAC,OAAX;AACH;;AACD,OAAK,IAAIE,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAkBA,CAAC,EAAnB,EAAsB;AAElB,YAAQ,IAAR;AACI,WAAMA,CAAC,GAACL,KAAK,CAACI,UAAd;AACIF,QAAAA,QAAQ,GAAG,IAAI,CAACG,CAAC,GAAC,CAAH,IAAM,CAArB;AACAJ,QAAAA,IAAI,IAAE,4BAA0BE,UAA1B,GAAqC,gCAArC,GAAsED,QAAtE,GAA+E,kBAArF;AACA;;AACJ,WAAMG,CAAC,KAAGL,KAAK,CAACI,UAAhB;AACIF,QAAAA,QAAQ,GAAG,IAAI,CAACG,CAAC,GAAC,CAAH,IAAM,CAArB;AACAJ,QAAAA,IAAI,IAAE,4BAA0BE,UAA1B,GAAqC,gCAArC,GAAsED,QAAtE,GAA+E,kBAArF;AACA;;AACJ,WAAMG,CAAC,GAACL,KAAK,CAACI,UAAd;AACIF,QAAAA,QAAQ,GAAG,IAAI,CAAEG,CAAC,GAAC,CAAJ,IAAO,CAAtB;AACAJ,QAAAA,IAAI,IAAE,8DAA4DC,QAA5D,GAAqE,kBAA3E;AACA;;AACJ;AAbJ;AAeH;;AACLD,EAAAA,IAAI,IAAE,cAAN;AAEI,sBAGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAA,oBACKD,KAAK,CAACM;AADX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,uBAAuB,EAAE;AAACC,cAAAA,MAAM,EAAEN;AAAT;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAC,2CAAf;AAAA,oBACKD,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHJ;AA6BH;KA3DuBT,Y","sourcesContent":["import React, { useState } from 'react';\n\nexport default function MeterWidgetH(props) {\n\n    let bars = \"<div><svg height=\\\"16\\\" width=\\\"58\\\">\";\n    let position = 0;\n    let colorValue = \"grey\"\n    if(props.meterValue<5){\n        colorValue = \"red\";\n    }else{\n        colorValue=\"green\"\n    }\n    for (let i=1;i<11;i++){\n\n        switch (true){\n            case (i<props.meterValue):\n                position = 2 + (i-1)*6;\n                bars+='<g fill=\"none\" stroke=\"'+colorValue+'\" stroke-width=\"4\"><path d=\"M '+position+' 2 l 0 12\"/></g>';\n                break;\n            case (i===props.meterValue):\n                position = 2 + (i-1)*6;\n                bars+='<g fill=\"none\" stroke=\"'+colorValue+'\" stroke-width=\"4\"><path d=\"M '+position+' 0 l 0 16\"/></g>';\n                break;\n            case (i>props.meterValue):\n                position = 2 + ( i-1)*6;\n                bars+='<g fill=\"none\" stroke=\"grey\" stroke-width=\"4\"><path d=\"M '+position+' 2 l 0 12\"/></g>';\n                break;\n            default:\n        }\n    }\nbars+=\"</svg></div>\";\n\n    return (\n\n\n        <div className=\"flex flex-row \">\n            <div className=\"m-1 rounded-md\">\n\n                <div className=\"flex flex-row\">\n                    <div className=\"text-TDRedHighlight text-sm font-medium\">\n                        {props.fromTitle}\n                    </div>\n                    <div className=\"px-1 pt-1\">\n                        <div dangerouslySetInnerHTML={{__html: bars}}></div>\n                    </div>\n                    <div className=\"text-TDGreenHighlight text-sm font-medium\">\n                        {props.toTitle}\n                    </div>\n\n                </div>\n            </div>\n\n\n        </div>\n\n\n\n\n\n\n    );\n}"]},"metadata":{},"sourceType":"module"}