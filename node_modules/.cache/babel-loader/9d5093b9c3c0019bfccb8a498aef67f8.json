{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/antoinemassih/WebstormProjects/TradingDashboadPersonal/src/Components/Dashboard/DashTileGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Counter from \"../Counter\";\nimport DashTile from \"./DashTile\";\nimport AlertWidgetH from \"./Widgets/AlertWidgetH\";\nimport DashTileExpanded from \"./DashTileExpanded\";\nimport { fetchWatchlist } from \"../../Utilities/Data/Watchlist/Watchlist\";\nimport IconSmall from \"../BaseUi/UIStructural/icon/IconSmall\";\nexport default function DashTileGroup(props) {\n  _s();\n\n  // Declare a new state variable, which we'll call \"count\"\n  const [expanded, setExpanded] = useState(false);\n  const elements = fetchWatchlist();\n  const stocks = [];\n\n  if (expanded) {\n    for (const [index, value] of elements.entries()) {\n      stocks.push( /*#__PURE__*/_jsxDEV(DashTileExpanded, {\n        symbol: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }, this));\n    }\n  } else {\n    for (const [index, value] of elements.entries()) {\n      stocks.push( /*#__PURE__*/_jsxDEV(DashTile, {\n        symbol: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TD-ticker-group\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-1 flex flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setExpanded(!expanded),\n              children: /*#__PURE__*/_jsxDEV(IconSmall, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-inter font-bold text-TDOffWhite\",\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-left font-bold\",\n            children: \"+5%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-left font-bold\",\n            children: /*#__PURE__*/_jsxDEV(AlertWidgetH, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" flex flex-row\",\n          children: stocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 17\n  }, this);\n}\n\n_s(DashTileGroup, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n\n_c = DashTileGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashTileGroup\");","map":{"version":3,"sources":["/Users/antoinemassih/WebstormProjects/TradingDashboadPersonal/src/Components/Dashboard/DashTileGroup.js"],"names":["React","useState","Counter","DashTile","AlertWidgetH","DashTileExpanded","fetchWatchlist","IconSmall","DashTileGroup","props","expanded","setExpanded","elements","stocks","index","value","entries","push","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,cAAR,QAA6B,0CAA7B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMW,QAAQ,GAAGN,cAAc,EAA/B;AAEA,QAAMO,MAAM,GAAG,EAAf;;AACA,MAAIH,QAAJ,EAAc;AACN,SAAK,MAAM,CAACI,KAAD,EAAQC,KAAR,CAAX,IAA6BH,QAAQ,CAACI,OAAT,EAA7B,EAAiD;AAC7CH,MAAAA,MAAM,CAACI,IAAP,eAAY,QAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAZ;AACH;AACA,GAJT,MAIe;AACH,SAAK,MAAM,CAACD,KAAD,EAAQC,KAAR,CAAX,IAA6BH,QAAQ,CAACI,OAAT,EAA7B,EAAiD;AAC7CH,MAAAA,MAAM,CAACI,IAAP,eAAY,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAZ;AACH;AACZ;;AAED,sBACY;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAA,+BACI;AAAA,kCAAK;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACD;AAAQ,cAAA,OAAO,EAAE,MAAMJ,WAAW,CAAE,CAACD,QAAH,CAAlC;AAAA,qCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADC,eAID;AAAK,cAAA,SAAS,EAAC,8CAAf;AAAA,wBACKD,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,oBAJC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eAUQ;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVR,eAaI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAqBI;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACKL;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADZ;AA+BH;;GAhDuBL,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\n\nimport Counter from \"../Counter\";\nimport DashTile from \"./DashTile\";\nimport AlertWidgetH from \"./Widgets/AlertWidgetH\";\nimport DashTileExpanded from \"./DashTileExpanded\";\nimport {fetchWatchlist} from \"../../Utilities/Data/Watchlist/Watchlist\";\nimport IconSmall from \"../BaseUi/UIStructural/icon/IconSmall\";\n\nexport default function DashTileGroup(props) {\n    // Declare a new state variable, which we'll call \"count\"\n    const [expanded, setExpanded] = useState(false);\n\n    const elements = fetchWatchlist();\n\n    const stocks = []\n    if (expanded) {\n            for (const [index, value] of elements.entries()) {\n                stocks.push(<DashTileExpanded symbol={value}/>)\n            }\n            } else {\n                for (const [index, value] of elements.entries()) {\n                    stocks.push(<DashTile symbol={value}/>)\n                }\n    }\n\n    return (\n                <div className=\"TD-ticker-group\">\n                    <div className=\"flex flex-row gap-x-2\">\n                        <div>\n                            <div><div className=\"p-1 flex flex-row\">\n                                <button onClick={() => setExpanded((!expanded))}>\n                                    <IconSmall/>\n                                </button>\n                                <div className=\"text-sm font-inter font-bold text-TDOffWhite\">\n                                    {props.title}\n                                </div>\n                            </div>\n\n\n                                    <div className=\"text-left font-bold\">\n                                        +5%\n                                    </div>\n                                <div className=\"text-left font-bold\">\n                                    <AlertWidgetH/>\n                                </div>\n                                </div>\n\n                        </div>\n                        <div>\n                        <div className=\" flex flex-row\">\n                            {stocks}\n                        </div>\n                    </div>\n                    </div>\n                </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}